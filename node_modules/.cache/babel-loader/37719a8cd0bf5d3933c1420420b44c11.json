{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\aboutAppleMarket\\\\src\\\\router\\\\List.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router\";\nimport Movie from \"../components/Movie\";\nimport Loading from \"../components/Loading\";\nimport styles from \"./List.module.css\";\nimport { Link } from \"react-router-dom\";\nimport { listPageReLoading, focusNav } from \"../atom/Atoms\";\nimport { useRecoilState, useSetRecoilState } from \"recoil\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst listNums = [...Array(10)].map((_, i) => i + 1);\n\nfunction List() {\n  _s();\n\n  const {\n    num,\n    detail\n  } = useParams();\n  const [loading, setLoading] = useState(true);\n  const [movies, setMovies] = useState([]);\n  const [reloading, setReloading] = useRecoilState(listPageReLoading);\n  const focusPage = useSetRecoilState(focusNav);\n\n  const getMovies = async () => {\n    const json = await (await fetch(`https://yts.mx/api/v2/list_movies.json?page=${num}&${detail}&sort_by=year`)).json();\n    setMovies(json.data.movies);\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    setReloading(false);\n    setLoading(true);\n    focusPage(detail);\n    getMovies();\n  }, [reloading]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [loading ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.movies,\n      children: movies.map(movie => /*#__PURE__*/_jsxDEV(Movie, {\n        id: movie.id,\n        year: movie.year,\n        coverImg: movie.medium_cover_image,\n        title: movie.title,\n        summary: movie.summary,\n        genres: movie.genres\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: styles.footer,\n      children: loading ? null : listNums.map(listNum => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: `/page/${detail}/${listNum}`,\n            onClick: () => setReloading(true),\n            className: listNum == num ? styles.focusing : null,\n            children: listNum\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_s(List, \"szr+nRPmimvEWKTZY5LWxEFUW18=\", false, function () {\n  return [useParams, useRecoilState, useSetRecoilState];\n});\n\n_c = List;\nexport default List;\n\nvar _c;\n\n$RefreshReg$(_c, \"List\");","map":{"version":3,"sources":["C:/Users/User/Desktop/aboutAppleMarket/src/router/List.js"],"names":["useEffect","useState","useParams","Movie","Loading","styles","Link","listPageReLoading","focusNav","useRecoilState","useSetRecoilState","listNums","Array","map","_","i","List","num","detail","loading","setLoading","movies","setMovies","reloading","setReloading","focusPage","getMovies","json","fetch","data","container","movie","id","year","medium_cover_image","title","summary","genres","footer","listNum","focusing"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router\";\nimport Movie from \"../components/Movie\";\nimport Loading from \"../components/Loading\";\nimport styles from \"./List.module.css\";\nimport {Link} from \"react-router-dom\";\nimport { listPageReLoading, focusNav} from \"../atom/Atoms\";\nimport { useRecoilState, useSetRecoilState } from \"recoil\";\n\nconst listNums = [...Array(10)].map((_,i) => i + 1);\n\nfunction List() {\n  const { num, detail } = useParams();\n\n  const [loading, setLoading] = useState(true);\n  const [movies, setMovies] = useState([]);\n  const [reloading, setReloading] = useRecoilState(listPageReLoading);\n  const focusPage = useSetRecoilState(focusNav);\n\n  const getMovies = async () => {\n    const json = await (\n      await fetch(\n        `https://yts.mx/api/v2/list_movies.json?page=${num}&${detail}&sort_by=year`\n      )\n    ).json();\n    setMovies(json.data.movies);\n    setLoading(false);\n  };\n  useEffect(() => {\n    setReloading(false);\n    setLoading(true);\n    focusPage(detail);\n\n    getMovies();\n  }, [reloading]);\n  \n  return (\n    <div className={styles.container}>\n      {loading ? (\n        <Loading />\n      ) : (\n        <div className={styles.movies}>\n          {movies.map((movie) => (\n            <Movie\n              key={movie.id}\n              id={movie.id}\n              year={movie.year}\n              coverImg={movie.medium_cover_image}\n              title={movie.title}\n              summary={movie.summary}\n              genres={movie.genres}\n            />\n          ))}\n        </div>      \n      )}\n      <ul className={styles.footer}>\n        {loading ? null : listNums.map(listNum => {\n          return (\n            <li>\n              <Link \n                to={`/page/${detail}/${listNum}`} \n                onClick={() => setReloading(true)}\n                className={\n                  listNum == num ? styles.focusing : null\n                }>{listNum}</Link>\n            </li>\n          )\n        }\n        )}\n      </ul>\n        \n    </div>\n  );\n}\nexport default List;"]},"metadata":{},"sourceType":"module"}